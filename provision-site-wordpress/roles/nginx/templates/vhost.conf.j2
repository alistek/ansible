{% if rewrite_www != "dev" %}
server {
  {% if rewrite_www == "www" %}
    server_name {{ website_root }};
    return 301 $scheme://www.{{ website_root }}$request_uri;
  {% else %}
    server_name www.{{ website_root }};
    return 301 $scheme://{{ website_root }}$request_uri;
  {% endif %}
}

{% endif %}
server {
  {% if rewrite_www == "www" %}
    server_name www.{{ website_root }};
  {% else %}
    server_name {{ website_root }};
  {% endif %}

    root /srv/apps/{{ website_root }}/public;

    access_log /srv/log/{{ website_root }}/{{ website_root }}_nginx.access.log main;
    error_log /srv/log/{{ website_root }}/{{ website_root }}_nginx.error.log warn;

    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;

    rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
    rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    index index.php;

    {% if 'WebServers_Production' in group_names %}
    set $no_cache_get 0;
    set $no_cache_set 0;
    set $reason "";

    if ($request_method = POST) {
      set $no_cache_get 1;

      set $reason "POST";
    }

    if ($query_string != "") {
      set $no_cache_get 1;

      set $reason "Query";
    }

    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|/api/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
      set $no_cache_set 1;
      set $no_cache_get 1;

      set $reason "Location";
    }

    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
      set $no_cache_set 1;
      set $no_cache_get 1;

      set $reason "Cookie";
    }

    if ($http_cookie ~* "nf_wp_session") {
      set $no_cache_set 0;
      set $no_cache_get 0;

      set $reason "NF_Cookie";
    }
    {% endif %}

    # Don't serve hidden files.
    location ~ /\. {
      deny all;
    }

    # Don't log favicon requests
    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    # Prevent access to any files starting with a $ (usually temp files)
    location ~ ~$ {
      log_not_found off;
      access_log off;
      deny all;
    }

    # Do not log robots.txt requests - keep log cleaner
    location = /robots.txt {
      log_not_found off;
      access_log off;
      allow all;
    }

    # Do not log humans.txt requests - keep log cleaner & Deny
    location = /humans.txt {
      log_not_found off;
      access_log off;
      allow all;
    }

    # Deny PHP execution in uploads
    location ~* /(?:uploads|files)/.*\.php$ {
      deny all;
    }

    # Deny reading of configuration/extra files
    location ~ /(\.|wp-config.php|readme.html|license.txt) {
      return 404;
    }

    # Static content Cache Control settings
    {% if 'WebServers_Production' in group_names %}
    # Do not cache HTM/HTML/XML/JSON pages
    location ~* \.(?:html?|xml|json)$ {
      expires -1;
      log_not_found off;
    }

    # Do not cache any feeds
    location ~* \.(?:rss|atom|api)$ {
      expires -1;
      log_not_found off;
    }

    # Media content cache for 1 Month
    # Cache Control public means that any server (proxies included) can cache this response
    # Must Revalidate and Proxy Revalidate means that after expiration time, new request has
    # to check with the origin server to see if new version exists
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires 1M;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      log_not_found off;
    }

    # CSS and Javascript cache for 1 month
    # Cache Control public means that any server (proxies included) can cache this response
    # Must Revalidate and Proxy Revalidate means that after expiration time, new request has
    # to check with the origin server to see if new version exists
    location ~* \.(?:css|js)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      log_not_found off;
    }
    {% else %}
    expires off;
    {% endif %}

    location / {
      # First try the directly passed URL, then the URL with a trailing slash (i.e. directory) and finally index.php
      # Wordpress will read from REQUEST_URI so you don't need to add the $args variable after
      # 1) http://www.example.com/about
      # 2) http://www.example.com/about/
      # 3) http://www.example.com/about via index.php REQUEST_URI
      try_files	$uri $uri/ /index.php;
    }

    include fastcgi.conf;
}

---
- name: Download Wordpress
  get_url: url=http://wordpress.org/wordpress-latest.tar.gz
           dest="/srv/apps/{{ website_root }}/public/wordpress-latest.tar.gz"

- name: Extract archive
  command: "tar xvfz wordpress-latest.tar.gz --strip-components 1"
  args:
      chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove Download Wordpress
  file: path="/srv/apps/{{ website_root }}/public/wordpress-latest.tar.gz" state=absent

- name: Remove wp-config-sample.php Wordpress
  file: path="/srv/apps/{{ website_root }}/public/wp-config-sample.php" state=absent

- name: Create WP-Config File - Development
  shell: 'wp core config --dbname="{{ mysql_database_dev.stdout }}" --dbuser="{{ mysql_user_dev.stdout }}" --dbpass="{{ mysql_password.stdout }}" --dbprefix=wp_dev_ --dbhost=127.0.0.1 --allow-root --path=public --extra-php="/** REPLACEME **/"'
  args:
    chdir: "/srv/apps/{{ website_root }}"
  when: rewrite_www == "dev"

- name: Create WP-Config File - Production
  shell: 'wp core config --dbname="{{ mysql_database_prod.stdout }}" --dbuser="{{ mysql_user_prod.stdout }}" --dbpass="{{ mysql_password.stdout }}" --dbprefix=wp_prod_ --dbhost=127.0.0.1 --allow-root --path=public --extra-php="/** REPLACEME **/"'
  args:
    chdir: "/srv/apps/{{ website_root }}"
  when: rewrite_www != "dev"

- name: Move WP-Config above Public
  command: mv "/srv/apps/{{ website_root }}/public/wp-config.php" "/srv/apps/{{ website_root }}"

- name: Replace commands in wp-config.php file - Development
  replace:
    dest="/srv/apps/{{ website_root }}/wp-config.php"
    regexp='\/\*\* REPLACEME \*\*\/$'
    replace="define('WPLANG', '');\ndefine('WP_DEBUG_LOG', true);\ndefine('WP_DEBUG_DISPLAY', false);\ndefine('SCRIPT_DEBUG', false);\n\tdefine('SAVEQUERIES', true);\ndefine('WP_DEBUG', true);\ndefine('WP_MEMORY_LIMIT', '128M' );\ndefine('DISALLOW_FILE_EDIT', true);\ndefine('DISABLE_WP_CRON', true);\n\nif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') { $_SERVER['HTTPS'] = 'on'; }"
  when: rewrite_www == "dev"

- name: Replace commands in wp-config.php file - Production
  replace:
    dest="/srv/apps/{{ website_root }}/wp-config.php"
    regexp='\/\*\* REPLACEME \*\*\/$'
    replace="define('WPLANG', '');\ndefine('WP_DEBUG_LOG', true);\ndefine('WP_DEBUG_DISPLAY', false);\ndefine('SCRIPT_DEBUG', false);\n\tdefine('SAVEQUERIES', false);\ndefine('WP_DEBUG', false);\ndefine('WP_MEMORY_LIMIT', '128M' );\ndefine('DISALLOW_FILE_EDIT', true);\ndefine('DISABLE_WP_CRON', true);\n\nif (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') { $_SERVER['HTTPS'] = 'on'; }"
  when: rewrite_www != "dev"

- name: Copy resetperm script file
  template: src=resetperm.j2
            dest="/srv/apps/{{ website_root }}/resetperm.sh"
            owner=root
            group=root
            mode=0600

- name: Install WP
  command: wp core install
           --allow-root
           --url="{{ home_url }}"
           --title="{{ site_title }}"
           --admin_user="{{ admin_user }}"
           --admin_password="temp2pass"
           --admin_email="{{ admin_email }}"
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Empty site of extra content
  command: wp site empty
           --yes
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove tagline
  command: wp option update blogdescription ""
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Update timezone
  command: wp option update timezone_string "America/Chicago"
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Close Comments
  command: wp option update default_comment_status "closed"
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Set Rewrite Structure
  command: wp rewrite structure '/%postname%/'
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Install BCrypt Plugin
  command: wp plugin install wp-hash-password
           --activate
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Install Anti-Spam Plugin
  command: wp plugin install anti-spam
           --activate
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Install Login Lockdown Plugin
  command: wp plugin install login-lockdown
           --activate
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Install WP Remote Plugin
  command: wp plugin install wpremote
           --activate
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove Hello Dolly Plugin
  command: wp plugin delete hello
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove Akismet Plugin
  command: wp plugin delete akismet
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove TwentyThirteen Theme
  command: wp theme delete twentythirteen
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Remove TwentyFourteen Theme
  command: wp theme delete twentyfourteen
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Update Admin User's Password
  command: wp user update 1 --user_pass="{{ admin_password }}"
           --allow-root
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Create MU Plugin Directory (Must Use)
  command: mkdir wp-content/mu-plugins
  args:
    chdir: "/srv/apps/{{ website_root }}/public"

- name: Add Wordpress Site Cron job
  cron: name="{{ website_root }} Update" minute="*" job="cd /srv/apps/{{ website_root }}/public/; php wp-cron.php > /dev/null 2>&1"

- name: Add Wordpress Permissions Cron job
  cron: name="{{ website_root }} Permissions Reset" minute="*" job="cd /srv/apps/{{ website_root }}/; sh resetperm.sh > /dev/null 2>&1"

- name: Run Set Permissions script
  command: sh "/srv/apps/{{ website_root }}/resetperm.sh"
  args:
    chdir: "/srv/apps/{{ website_root }}"
